import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders })
  }

  try {
    const { email, firstName } = await req.json()

    // Here you would integrate with your email service (SendGrid, Mailgun, etc.)
    // For now, we'll just log the email that would be sent
    console.log(`Sending welcome email to: ${email}`)
    console.log(`First name: ${firstName}`)

    // Example email content that would be sent:
    const emailContent = {
      to: email,
      subject: '–î–æ–±—Ä–µ –¥–æ—à–ª–∏ –≤ Bat Petko Store! üêæ',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 40px 20px; text-align: center;">
            <h1 style="color: white; margin: 0; font-size: 28px;">–î–æ–±—Ä–µ –¥–æ—à–ª–∏ –≤ Bat Petko Store! üêæ</h1>
          </div>
          
          <div style="padding: 40px 20px; background: #f8f9fa;">
            <h2 style="color: #333; margin-bottom: 20px;">–ó–¥—Ä–∞–≤–µ–π—Ç–µ, ${firstName}!</h2>
            
            <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
              –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∏, —á–µ —Å–µ –ø—Ä–∏—Å—ä–µ–¥–∏–Ω–∏—Ö—Ç–µ –∫—ä–º –Ω–∞—à–∞—Ç–∞ –æ–±—â–Ω–æ—Å—Ç –æ—Ç –ª—é–±–∏—Ç–µ–ª–∏ –Ω–∞ –¥–æ–º–∞—à–Ω–∏ –ª—é–±–∏–º—Ü–∏! 
              –ù–∏–µ —Å–º–µ —Ä–∞–∑–≤—ä–ª–Ω—É–≤–∞–Ω–∏ –¥–∞ –≤–∏ –ø–æ–º–æ–≥–Ω–µ–º –¥–∞ —Å–µ –≥—Ä–∏–∂–∏—Ç–µ –∑–∞ –≤–∞—à–∏—Ç–µ —á–µ—Ç–∏—Ä–∏–Ω–æ–≥–∏ –ø—Ä–∏—è—Ç–µ–ª–∏.
            </p>
            
            <div style="background: white; padding: 30px; border-radius: 10px; margin: 30px 0;">
              <h3 style="color: #333; margin-bottom: 15px;">–ö–∞–∫–≤–æ –º–æ–∂–µ—Ç–µ –¥–∞ –æ—á–∞–∫–≤–∞—Ç–µ:</h3>
              <ul style="color: #666; line-height: 1.8;">
                <li>üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∏ –ø—Ä–µ–ø–æ—Ä—ä–∫–∏ –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∏</li>
                <li>üöö –ë–µ–∑–ø–ª–∞—Ç–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –ø–æ—Ä—ä—á–∫–∏ –Ω–∞–¥ 50 –ª–≤</li>
                <li>üí∞ –ï–∫—Å–∫–ª—É–∑–∏–≤–Ω–∏ –æ—Ç—Å—Ç—ä–ø–∫–∏ –∏ –ø—Ä–æ–º–æ—Ü–∏–∏</li>
                <li>üìö –ü–æ–ª–µ–∑–Ω–∏ —Å—ä–≤–µ—Ç–∏ –∑–∞ –≥—Ä–∏–∂–∞ –∑–∞ –¥–æ–º–∞—à–Ω–∏ –ª—é–±–∏–º—Ü–∏</li>
                <li>‚≠ê –ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞ –ª–æ—è–ª–Ω–æ—Å—Ç —Å –Ω–∞–≥—Ä–∞–¥–∏</li>
              </ul>
            </div>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="https://yourstore.com/products" 
                 style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
                        color: white; 
                        padding: 15px 30px; 
                        text-decoration: none; 
                        border-radius: 25px; 
                        font-weight: bold;
                        display: inline-block;">
                –ó–∞–ø–æ—á–Ω–µ—Ç–µ –ø–∞–∑–∞—Ä—É–≤–∞–Ω–µ—Ç–æ
              </a>
            </div>
            
            <p style="color: #666; line-height: 1.6; margin-top: 30px;">
              –ê–∫–æ –∏–º–∞—Ç–µ –≤—ä–ø—Ä–æ—Å–∏, –Ω–µ —Å–µ –∫–æ–ª–µ–±–∞–π—Ç–µ –¥–∞ —Å–µ —Å–≤—ä—Ä–∂–µ—Ç–µ —Å –Ω–∞—Å –Ω–∞ 
              <a href="mailto:info@petstore.bg" style="color: #667eea;">info@petstore.bg</a> 
              –∏–ª–∏ 0888 123 456.
            </p>
            
            <p style="color: #666; margin-top: 20px;">
              –° –Ω–∞–π-–¥–æ–±—Ä–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è,<br>
              <strong>–ï–∫–∏–ø—ä—Ç –Ω–∞ Bat Petko Store</strong>
            </p>
          </div>
          
          <div style="background: #333; padding: 20px; text-align: center;">
            <p style="color: #999; margin: 0; font-size: 12px;">
              ¬© 2024 Bat Petko Store. –í—Å–∏—á–∫–∏ –ø—Ä–∞–≤–∞ –∑–∞–ø–∞–∑–µ–Ω–∏.
            </p>
          </div>
        </div>
      `
    }

    // In a real implementation, you would send the email here
    // Example with SendGrid:
    // const response = await fetch('https://api.sendgrid.com/v3/mail/send', {
    //   method: 'POST',
    //   headers: {
    //     'Authorization': `Bearer ${Deno.env.get('SENDGRID_API_KEY')}`,
    //     'Content-Type': 'application/json',
    //   },
    //   body: JSON.stringify({
    //     personalizations: [{ to: [{ email }] }],
    //     from: { email: 'noreply@petstore.bg', name: 'Bat Petko Store' },
    //     subject: emailContent.subject,
    //     content: [{ type: 'text/html', value: emailContent.html }]
    //   })
    // })

    return new Response(
      JSON.stringify({ 
        success: true, 
        message: 'Welcome email queued for sending',
        emailContent // For demo purposes, return the email content
      }),
      { 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 200 
      }
    )

  } catch (error) {
    console.error('Error sending welcome email:', error)
    return new Response(
      JSON.stringify({ error: error.message }),
      { 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 500 
      }
    )
  }
})